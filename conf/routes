# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Imports
->          /                                                       frontendcommons.Routes

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                           controllers.Assets.at(path="/public", file)
GET         /vassets/*file                                          controllers.Assets.versioned(path="/public", file: Asset)


GET         /                                                       @org.iatoki.judgels.uriel.controllers.ApplicationController.index()
GET         /auth/:returnUri                                        @org.iatoki.judgels.uriel.controllers.ApplicationController.auth(returnUri: String)
GET         /authRole/:returnUri                                    @org.iatoki.judgels.uriel.controllers.ApplicationController.authRole(returnUri: String)
GET         /afterLogin/:returnUri                                  @org.iatoki.judgels.uriel.controllers.ApplicationController.afterLogin(returnUri: String)
GET         /afterProfile/:returnUri                                @org.iatoki.judgels.uriel.controllers.ApplicationController.afterProfile(returnUri: String)

GET         /contests                                               @org.iatoki.judgels.uriel.controllers.ContestController.index()
GET         /contests/                                              @org.iatoki.judgels.uriel.controllers.ContestController.listAllowedContests(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /contests/:cId/view                                     @org.iatoki.judgels.uriel.controllers.ContestController.viewContest(cId: Long)
GET         /contests/:cId/view/                                    @org.iatoki.judgels.uriel.controllers.ContestController.viewContestAndListRegistrants(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /contests/:cId/register                                 @org.iatoki.judgels.uriel.controllers.ContestController.registerToAContest(cId: Long)
GET         /contests/:cId/enter                                    @org.iatoki.judgels.uriel.controllers.ContestController.enterContest(cId: Long)

GET         /contests/create                                        @org.iatoki.judgels.uriel.controllers.ContestController.createContest()
POST        /contests/create                                        @org.iatoki.judgels.uriel.controllers.ContestController.postCreateContest()

GET         /contests/:cId/update/general                           @org.iatoki.judgels.uriel.controllers.ContestController.updateContestGeneralConfig(cId: Long)
POST        /contests/:cId/update/general                           @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateContestGeneralConfig(cId: Long)

GET         /contests/:cId/update/specific                          @org.iatoki.judgels.uriel.controllers.ContestController.updateContestSpecificConfig(cId: Long)
POST        /contests/:cId/update/specific                          @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateContestSpecificConfig(cId: Long)

GET         /contests/:cId/managers                                 @org.iatoki.judgels.uriel.controllers.ContestManagerController.viewManagers(cId: Long)
GET         /contests/:cId/managers/                                @org.iatoki.judgels.uriel.controllers.ContestManagerController.listManagers(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/managers/create                          @org.iatoki.judgels.uriel.controllers.ContestManagerController.createManager(cId: Long)
POST        /contests/:cId/managers/create                          @org.iatoki.judgels.uriel.controllers.ContestManagerController.postCreateManager(cId: Long)

GET         /contests/:cId/supervisors                              @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.viewSupervisors(cId: Long)
GET         /contests/:cId/supervisors/                             @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.listSupervisors(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/supervisors/create                       @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.createSupervisor(cId: Long)
POST        /contests/:cId/supervisors/create                       @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.postCreateSupervisor(cId: Long)
GET         /contests/:cId/supervisors/:sId/update                  @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.updateSupervisor(cId: Long, sId: Long)
POST        /contests/:cId/supervisors/:sId/update                  @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.postUpdateSupervisor(cId: Long, sId: Long)

GET         /contests/:cId/announcements                            @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.viewPublishedAnnouncements(cId: Long)
GET         /contests/:cId/announcements/                           @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.listPublishedAnnouncements(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/announcements/all                        @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.viewAnnouncements(cId: Long)
GET         /contests/:cId/announcements/all/                       @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.listAnnouncements(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/announcements/create                     @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.createAnnouncement(cId: Long)
POST        /contests/:cId/announcements/create                     @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.postCreateAnnouncement(cId: Long)
GET         /contests/:cId/announcements/:aId/update                @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.updateAnnouncement(cId: Long, aId: Long)
POST        /contests/:cId/announcements/:aId/update                @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.postUpdateAnnouncement(cId: Long, aId: Long)

GET         /contests/:cId/problems                                 @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewOpenedProblems(cId: Long)
GET         /contests/:cId/problems/                                @org.iatoki.judgels.uriel.controllers.ContestProblemController.listOpenedProblems(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/problems/:pId/view                       @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewProblem(cId: Long, pId: Long)
GET         /contests/:cId/problems/:pId/render/:name               @org.iatoki.judgels.uriel.controllers.ContestProblemController.renderImage(cId: Long, pId: Long, name: String)
POST        /contests/:cId/problems/:pJid/submit                    @org.iatoki.judgels.uriel.controllers.ContestProblemController.postSubmitProblem(cId: Long, pJid: String)
GET         /contests/:cId/problems/all                             @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewProblems(cId: Long)
GET         /contests/:cId/problems/all/                            @org.iatoki.judgels.uriel.controllers.ContestProblemController.listProblems(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/problems/create                          @org.iatoki.judgels.uriel.controllers.ContestProblemController.createProblem(cId: Long)
POST        /contests/:cId/problems/create                          @org.iatoki.judgels.uriel.controllers.ContestProblemController.postCreateProblem(cId: Long)
GET         /contests/:cId/problems/:pId/update                     @org.iatoki.judgels.uriel.controllers.ContestProblemController.updateProblem(cId: Long, pId: Long)
POST        /contests/:cId/problems/:pId/update                     @org.iatoki.judgels.uriel.controllers.ContestProblemController.postUpdateProblem(cId: Long, pId: Long)

GET         /contests/:cId/submissions                              @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.viewScreenedSubmissions(cId: Long)
GET         /contests/:cId/submissions/                             @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.listScreenedSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/submissions/:sId                         @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.viewSubmission(cId: Long, sId: Long)
GET         /contests/:cId/submissions                              @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.viewSubmissions(cId: Long)
GET         /contests/:cId/submissions/                             @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.listSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
GET         /contests/:cId/submissions/:sId/regrade                 @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.regradeSubmission(cId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
POST        /contests/:cId/submissions/regrade                      @org.iatoki.judgels.uriel.controllers.ContestSubmissionController.regradeSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)

GET         /contests/:cId/clarifications                           @org.iatoki.judgels.uriel.controllers.ContestClarificationController.viewScreenedClarifications(cId: Long)
GET         /contests/:cId/clarifications/                          @org.iatoki.judgels.uriel.controllers.ContestClarificationController.listScreenedClarifications(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/clarifications/create                    @org.iatoki.judgels.uriel.controllers.ContestClarificationController.createClarification(cId: Long)
POST        /contests/:cId/clarifications/create                    @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postCreateClarification(cId: Long)
GET         /contests/:cId/clarifications/:c2Id/update/content      @org.iatoki.judgels.uriel.controllers.ContestClarificationController.updateClarificationContent(cId: Long, c2Id: Long)
POST        /contests/:cId/clarifications/:c2Id/update/content      @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postUpdateClarificationContent(cId: Long, c2Id: Long)
GET         /contests/:cId/clarifications/all                       @org.iatoki.judgels.uriel.controllers.ContestClarificationController.viewClarifications(cId: Long)
GET         /contests/:cId/clarifications/all/                      @org.iatoki.judgels.uriel.controllers.ContestClarificationController.listClarifications(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/clarifications/:c2Id/update/answer       @org.iatoki.judgels.uriel.controllers.ContestClarificationController.updateClarificationAnswer(cId: Long, c2Id: Long)
POST        /contests/:cId/clarifications/:c2Id/update/answer       @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postUpdateClarificationAnswer(cId: Long, c2Id: Long)

GET         /contests/:cId/contestants                              @org.iatoki.judgels.uriel.controllers.ContestContestantController.viewContestants(cId: Long)
GET         /contests/:cId/contestants/                             @org.iatoki.judgels.uriel.controllers.ContestContestantController.listContestants(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/contestants/create                       @org.iatoki.judgels.uriel.controllers.ContestContestantController.createContestant(cId: Long)
POST        /contests/:cId/contestants/create                       @org.iatoki.judgels.uriel.controllers.ContestContestantController.postCreateContestant(cId: Long)
POST        /contests/:cId/contestants/upload                       @org.iatoki.judgels.uriel.controllers.ContestContestantController.postUploadContestant(cId: Long)
GET         /contests/:cId/contestants/:c2Id/update                 @org.iatoki.judgels.uriel.controllers.ContestContestantController.updateContestant(cId: Long, c2Id: Long)
POST        /contests/:cId/contestants/:c2Id/update                 @org.iatoki.judgels.uriel.controllers.ContestContestantController.postUpdateContestant(cId: Long, c2Id: Long)

GET         /contests/:cId/teams                                    @org.iatoki.judgels.uriel.controllers.ContestTeamController.viewTeams(cId: Long)
GET         /contests/:cId/teams/                                   @org.iatoki.judgels.uriel.controllers.ContestTeamController.listTeams(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:cId/teams/create                             @org.iatoki.judgels.uriel.controllers.ContestTeamController.createTeam(cId: Long)
POST        /contests/:cId/teams/create                             @org.iatoki.judgels.uriel.controllers.ContestTeamController.postCreateTeam(cId: Long)
GET         /contests/:cId/teams/:tId/update                        @org.iatoki.judgels.uriel.controllers.ContestTeamController.updateTeam(cId: Long, tId: Long)
POST        /contests/:cId/teams/:tId/update                        @org.iatoki.judgels.uriel.controllers.ContestTeamController.postUpdateTeam(cId: Long, tId: Long)
GET         /contests/:cId/teams/:tId/view                          @org.iatoki.judgels.uriel.controllers.ContestTeamController.viewTeam(cId: Long, tId: Long)
POST        /contests/:cId/teams/:tId/coaches/create                @org.iatoki.judgels.uriel.controllers.ContestTeamController.postCreateTeamCoach(cId: Long, tId: Long)
GET         /contests/:cId/teams/:tId/coaches/:c2Id/remove          @org.iatoki.judgels.uriel.controllers.ContestTeamController.removeTeamCoach(cId: Long, tId: Long, c2Id: Long)
POST        /contests/:cId/teams/:tId/members/create                @org.iatoki.judgels.uriel.controllers.ContestTeamController.postCreateTeamMember(cId: Long, tId: Long)
GET         /contests/:cId/teams/:tId/members/:mId/remove           @org.iatoki.judgels.uriel.controllers.ContestTeamController.removeTeamMember(cId: Long, tId: Long, mId: Long)

GET         /contests/:cId/scoreboard                               @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.viewScoreboard(cId: Long)
GET         /contests/:cId/scoreboard/official                      @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.viewOfficialScoreboard(cId: Long)
GET         /contests/:cId/scoreboard/refresh                       @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.refreshAllScoreboard(cId: Long)
GET         /contests/:cId/data/download                            @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.downloadContestDataAsXLS(cId: Long)



GET         /contest/:cId/ajax/clarification/unread                 @org.iatoki.judgels.uriel.controllers.apis.ContestAPIController.unreadClarification(cId: Long)
GET         /contest/:cId/ajax/clarification/unanswered             @org.iatoki.judgels.uriel.controllers.apis.ContestAPIController.unansweredClarification(cId: Long)
GET         /contest/:cId/ajax/announcement/unread                  @org.iatoki.judgels.uriel.controllers.apis.ContestAPIController.unreadAnnouncement(cId: Long)
GET         /team/avatar/:imageName                                 @org.iatoki.judgels.uriel.controllers.apis.ContestAPIController.renderTeamAvatarImage(imageName: String)

GET         /userRoles                                              @org.iatoki.judgels.uriel.controllers.UserRoleController.index()
GET         /userRoles/                                             @org.iatoki.judgels.uriel.controllers.UserRoleController.list(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /userRoles/:uId/update                                  @org.iatoki.judgels.uriel.controllers.UserRoleController.update(uId: Long)
POST        /userRoles/:uId/update                                  @org.iatoki.judgels.uriel.controllers.UserRoleController.postUpdate(uId: Long)

GET         /userRoles/:uId/delete                                  @org.iatoki.judgels.uriel.controllers.UserRoleController.delete(uId: Long)

