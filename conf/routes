->          /                                                                                       playcommons.Routes
->          /                                                                                       jophielcommons.Routes

GET         /                                                                                       @org.iatoki.judgels.uriel.controllers.ApplicationController.index()
GET         /auth                                                                                   @org.iatoki.judgels.uriel.controllers.ApplicationController.auth(returnUri ?= "")
GET         /authRole                                                                               @org.iatoki.judgels.uriel.controllers.ApplicationController.authRole(returnUri ?= "")
GET         /afterLogin                                                                             @org.iatoki.judgels.uriel.controllers.ApplicationController.afterLogin(returnUri ?= "")
POST        /viewAs                                                                                 @org.iatoki.judgels.uriel.controllers.ApplicationController.postViewAs()
GET         /resetViewAs                                                                            @org.iatoki.judgels.uriel.controllers.ApplicationController.resetViewAs()

GET         /contests                                                                               @org.iatoki.judgels.uriel.controllers.ContestController.index()
GET         /contests/                                                                              @org.iatoki.judgels.uriel.controllers.ContestController.listAllowedContests(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
GET         /contests/new                                                                           @org.iatoki.judgels.uriel.controllers.ContestController.createContest()
POST        /contests                                                                               @org.iatoki.judgels.uriel.controllers.ContestController.postCreateContest()

GET         /contests/:contestId                                                                    @org.iatoki.judgels.uriel.controllers.ContestController.viewContest(contestId: Long)
GET         /contests/:contestId/                                                                   @org.iatoki.judgels.uriel.controllers.ContestController.viewContestAndListRegistrants(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filtertring ?= "")

GET         /contests/:contestId/register                                                           @org.iatoki.judgels.uriel.controllers.ContestController.registerToAContest(contestId: Long)
GET         /contests/:contestId/unregister                                                         @org.iatoki.judgels.uriel.controllers.ContestController.unregisterFromAContest(contestId: Long)
GET         /contests/:contestId/enter                                                              @org.iatoki.judgels.uriel.controllers.ContestController.enterContest(contestId: Long)
POST        /contests/:contestId/enterWithPassword                                                  @org.iatoki.judgels.uriel.controllers.ContestController.enterContestWithPassword(contestId: Long)
GET         /contests/:contestId/start                                                              @org.iatoki.judgels.uriel.controllers.ContestController.startContest(contestId: Long)

GET         /contests/:contestId/lock                                                               @org.iatoki.judgels.uriel.controllers.ContestController.lockContest(contestId: Long)
GET         /contests/:contestId/unlock                                                             @org.iatoki.judgels.uriel.controllers.ContestController.unlockContest(contestId: Long)


GET         /contest/:contestId/jumpToAnnouncements                                                 @org.iatoki.judgels.uriel.controllers.ContestController.jumpToAnnouncements(contestId: Long)
GET         /contest/:contestId/jumpToProblems                                                      @org.iatoki.judgels.uriel.controllers.ContestController.jumpToProblems(contestId: Long)
GET         /contest/:contestId/jumpToSubmissions                                                   @org.iatoki.judgels.uriel.controllers.ContestController.jumpToSubmissions(contestId: Long)
GET         /contest/:contestId/jumpToScoreboards                                                   @org.iatoki.judgels.uriel.controllers.ContestController.jumpToScoreboards(contestId: Long)
GET         /contest/:contestId/jumpToClarifications                                                @org.iatoki.judgels.uriel.controllers.ContestController.jumpToClarifications(contestId: Long)
GET         /contest/:contestId/jumpToContestants                                                   @org.iatoki.judgels.uriel.controllers.ContestController.jumpToContestants(contestId: Long)
GET         /contest/:contestId/jumpToTeams                                                         @org.iatoki.judgels.uriel.controllers.ContestController.jumpToTeams(contestId: Long)
GET         /contest/:contestId/jumpToSupervisors                                                   @org.iatoki.judgels.uriel.controllers.ContestController.jumpToSupervisors(contestId: Long)
GET         /contest/:contestId/jumpToManagers                                                      @org.iatoki.judgels.uriel.controllers.ContestController.jumpToManagers(contestId: Long)
GET         /contest/:contestId/jumpToFiles                                                         @org.iatoki.judgels.uriel.controllers.ContestController.jumpToFiles(contestId: Long)
GET         /contest/:contestId/jumpToPasswords                                                     @org.iatoki.judgels.uriel.controllers.ContestController.jumpToPasswords(contestId: Long)

GET         /contests/:contestId/edit                                                               @org.iatoki.judgels.uriel.controllers.ContestController.editContestGeneralConfig(contestId: Long)
POST        /contests/:contestId                                                                    @org.iatoki.judgels.uriel.controllers.ContestController.postEditContestGeneralConfig(contestId: Long)

GET         /contests/:contestId/modules                                                            @org.iatoki.judgels.uriel.controllers.ContestController.editContestModuleConfig(contestId: Long)
GET         /contests/:contestId/modules/:moduleName/enable                                         @org.iatoki.judgels.uriel.controllers.ContestController.enableModule(contestId: Long, moduleName)
GET         /contests/:contestId/modules/:moduleName/disable                                        @org.iatoki.judgels.uriel.controllers.ContestController.disableModule(contestId: Long, moduleName)

GET         /contests/:contestId/config                                                             @org.iatoki.judgels.uriel.controllers.ContestController.editContestSpecificConfig(contestId: Long)
POST        /contests/:contestId/config                                                             @org.iatoki.judgels.uriel.controllers.ContestController.postEditContestSpecificConfig(contestId: Long)

GET         /contests/:contestId/managers                                                           @org.iatoki.judgels.uriel.controllers.ContestManagerController.viewManagers(contestId: Long)
GET         /contests/:contestId/managers/                                                          @org.iatoki.judgels.uriel.controllers.ContestManagerController.listAddManagers(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/managers                                                           @org.iatoki.judgels.uriel.controllers.ContestManagerController.postAddManager(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/managers/:managerId/remove                                         @org.iatoki.judgels.uriel.controllers.ContestManagerController.removeManager(contestId: Long, managerId: Long)

GET         /contests/:contestId/supervisors                                                        @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.viewSupervisors(contestId: Long)
GET         /contests/:contestId/supervisors/                                                       @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.listAddSupervisors(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/supervisors                                                        @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.postAddSupervisor(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/supervisors/:supervisorId                                          @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.editSupervisor(contestId: Long, supervisorId: Long)
POST        /contests/:contestId/supervisors/:supervisorId                                          @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.postEditSupervisor(contestId: Long, supervisorId: Long)
GET         /contests/:contestId/supervisors/:supervisorId/remove                                   @org.iatoki.judgels.uriel.controllers.ContestSupervisorController.removeSupervisor(contestId: Long, supervisorId: Long)

GET         /contests/:contestId/announcements                                                      @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.viewPublishedAnnouncements(contestId: Long)
GET         /contests/:contestId/announcements/                                                     @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.listPublishedAnnouncements(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterStrng ?= "")
GET         /contests/:contestId/announcements/all                                                  @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.viewAnnouncements(contestId: Long)
GET         /contests/:contestId/announcements/all/                                                 @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.listAnnouncements(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/announcements/new                                                  @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.createAnnouncement(contestId: Long)
POST        /contests/:contestId/announcements                                                      @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.postCreateAnnouncement(contestId: Long)
GET         /contests/:contestId/announcements/:announcementId                                      @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.editAnnouncement(contestId: Long, announcementId: Long)
POST        /contests/:contestId/announcements/:announcementId                                      @org.iatoki.judgels.uriel.controllers.ContestAnnouncementController.postEditAnnouncement(contestId: Long, announcementId: Long)

GET         /contests/:contestId/problems                                                           @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewUsedProblems(contestId: Long)
GET         /contests/:contestId/problems/                                                          @org.iatoki.judgels.uriel.controllers.ContestProblemController.listUsedProblems(contestId: Long, pageIndex: Long ?= 0)
GET         /contests/:contestId/problems/:problemId/view                                           @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewProblem(contestId: Long, problemId: Long)
GET         /contests/:contestId/problems/:problemId/render/:name                                   @org.iatoki.judgels.uriel.controllers.ContestProblemController.renderImage(contestId: Long, problemId: Long, name)
POST        /contests/:contestId/problems/:problemId/switchLanguage                                 @org.iatoki.judgels.uriel.controllers.ContestProblemController.switchLanguage(contestId: Long, problemId: Long)
GET         /contests/:contestId/problems/all                                                       @org.iatoki.judgels.uriel.controllers.ContestProblemController.viewProblems(contestId: Long)
GET         /contests/:contestId/problems/all/                                                      @org.iatoki.judgels.uriel.controllers.ContestProblemController.listProblems(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/problems/add                                                       @org.iatoki.judgels.uriel.controllers.ContestProblemController.addProblem(contestId: Long)
POST        /contests/:contestId/problems                                                           @org.iatoki.judgels.uriel.controllers.ContestProblemController.postAddProblem(contestId: Long)
GET         /contests/:contestId/problems/:problemId                                                @org.iatoki.judgels.uriel.controllers.ContestProblemController.editProblem(contestId: Long, problemId: Long)
POST        /contests/:contestId/problems/:problemId                                                @org.iatoki.judgels.uriel.controllers.ContestProblemController.postEditProblem(contestId: Long, problemId: Long)
GET         /contests/:contestId/problems/:problemId/remove                                         @org.iatoki.judgels.uriel.controllers.ContestProblemController.removeProblem(contestId: Long, problemId: Long)

POST        /contests/:contestId/submissions                                                        @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.postSubmitProblem(contestId: Long, problemJid ?= null)
GET         /contests/:contestId/submissions                                                        @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.viewScreenedSubmissions(contestId: Long)
GET         /contests/:contestId/submissions/                                                       @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.listScreenedSubmissions(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", problemJid ?= null)
GET         /contests/:contestId/submissions/all                                                    @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.viewSubmissions(contestId: Long)
GET         /contests/:contestId/submissions/all/                                                   @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.listSubmissions(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
GET         /contests/:contestId/submissions/:submissionId                                          @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.viewSubmission(contestId: Long, submissionId: Long)
GET         /contests/:contestId/submissions/:submissionId/regrade                                  @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.regradeSubmission(contestId: Long, submissionId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
POST        /contests/:contestId/submissions/regrade                                                @org.iatoki.judgels.uriel.controllers.ContestProgrammingSubmissionController.regradeSubmissions(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)

GET         /contests/:contestId/clarifications                                                     @org.iatoki.judgels.uriel.controllers.ContestClarificationController.viewScreenedClarifications(contestId: Long)
GET         /contests/:contestId/clarifications/                                                    @org.iatoki.judgels.uriel.controllers.ContestClarificationController.listScreenedClarifications(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString = "")
GET         /contests/:contestId/clarifications/new                                                 @org.iatoki.judgels.uriel.controllers.ContestClarificationController.createClarification(contestId: Long)
POST        /contests/:contestId/clarifications                                                     @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postCreateClarification(contestId: Long)
GET         /contests/:contestId/clarifications/:clarificationId/content                            @org.iatoki.judgels.uriel.controllers.ContestClarificationController.editClarificationContent(contestId: Long, clarificationId: Long)
POST        /contests/:contestId/clarifications/:clarificationId/content                            @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postEditClarificationContent(contestId: Long, clarificationId: Long)
GET         /contests/:contestId/clarifications/all                                                 @org.iatoki.judgels.uriel.controllers.ContestClarificationController.viewClarifications(contestId: Long)
GET         /contests/:contestId/clarifications/all/                                                @org.iatoki.judgels.uriel.controllers.ContestClarificationController.listClarifications(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/clarifications/:clarificationId/answer                             @org.iatoki.judgels.uriel.controllers.ContestClarificationController.editClarificationAnswer(contestId: Long, clarificationId: Long)
POST        /contests/:contestId/clarifications/:clarificationId/answer                             @org.iatoki.judgels.uriel.controllers.ContestClarificationController.postEditClarificationAnswer(contestId: Long, clarificationId: Long)

GET         /contests/:contestId/contestants/passwords                                              @org.iatoki.judgels.uriel.controllers.ContestPasswordController.viewContestantPasswords(contestId: Long)
GET         /contests/:contestId/contestants/passwords/                                             @org.iatoki.judgels.uriel.controllers.ContestPasswordController.listContestantPasswords(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/contestants/passwords/generate                                     @org.iatoki.judgels.uriel.controllers.ContestPasswordController.generateContestantPasswords(contestId: Long)
GET         /contests/:contestId/contestants/:contestantId/passwords/generate                       @org.iatoki.judgels.uriel.controllers.ContestPasswordController.generateContestantPassword(contestId: Long, contestantId: Long)

GET         /contests/:contestId/contestants                                                        @org.iatoki.judgels.uriel.controllers.ContestContestantController.viewContestants(contestId: Long)
GET         /contests/:contestId/contestants/                                                       @org.iatoki.judgels.uriel.controllers.ContestContestantController.listAddContestants(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/contestants                                                        @org.iatoki.judgels.uriel.controllers.ContestContestantController.postAddContestant(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/contestants/upload                                                 @org.iatoki.judgels.uriel.controllers.ContestContestantController.postUploadContestant(contestId: Long)
GET         /contests/:contestId/contestants/:contestantId                                          @org.iatoki.judgels.uriel.controllers.ContestContestantController.editContestant(contestId: Long, contestantId: Long)
POST        /contests/:contestId/contestants/:contestantId                                          @org.iatoki.judgels.uriel.controllers.ContestContestantController.postEditContestant(contestId: Long, contestantId: Long)
GET         /contests/:contestId/contestants/:contestantId/remove                                   @org.iatoki.judgels.uriel.controllers.ContestContestantController.removeContestant(contestId: Long, contestantId: Long)

GET         /contests/:contestId/teams                                                              @org.iatoki.judgels.uriel.controllers.ContestTeamController.viewScreenedTeams(contestId: Long)
GET         /contests/:contestId/teams/                                                             @org.iatoki.judgels.uriel.controllers.ContestTeamController.listScreenedTeams(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc")
GET         /contests/:contestId/teams/all                                                          @org.iatoki.judgels.uriel.controllers.ContestTeamController.viewTeams(contestId: Long)
GET         /contests/:contestId/teams/all/                                                         @org.iatoki.judgels.uriel.controllers.ContestTeamController.listCreateTeams(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
POST        /contests/:contestId/teams                                                              @org.iatoki.judgels.uriel.controllers.ContestTeamController.postCreateTeam(contestId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contests/:contestId/teams/:teamId                                                      @org.iatoki.judgels.uriel.controllers.ContestTeamController.viewTeam(contestId: Long, teamId: Long)
GET         /contests/:contestId/teams/:teamId/edit                                                 @org.iatoki.judgels.uriel.controllers.ContestTeamController.editTeam(contestId: Long, teamId: Long)
POST        /contests/:contestId/teams/:teamId                                                      @org.iatoki.judgels.uriel.controllers.ContestTeamController.postEditTeam(contestId: Long, teamId: Long)
GET         /contests/:contestId/teams/:teamId/start                                                @org.iatoki.judgels.uriel.controllers.ContestTeamController.startTeam(contestId: Long, teamId: Long)
POST        /contests/:contestId/teams/:teamId/coaches                                              @org.iatoki.judgels.uriel.controllers.ContestTeamController.postAddTeamCoach(contestId: Long, teamId: Long)
POST        /contests/:contestId/teams/:teamId/coaches/upload                                       @org.iatoki.judgels.uriel.controllers.ContestTeamController.postUploadTeamCoach(contestId: Long, teamId: Long)
GET         /contests/:contestId/teams/:teamId/coaches/:coachId/remove                              @org.iatoki.judgels.uriel.controllers.ContestTeamController.removeTeamCoach(contestId: Long, teamId: Long, coachId: Long)
POST        /contests/:contestId/teams/:teamId/members                                              @org.iatoki.judgels.uriel.controllers.ContestTeamController.postAddTeamMember(contestId: Long, teamId: Long)
POST        /contests/:contestId/teams/:teamId/members/upload                                       @org.iatoki.judgels.uriel.controllers.ContestTeamController.postUploadTeamMember(contestId: Long, teamId: Long)
GET         /contests/:contestId/teams/:teamId/members/:memberId/remove                             @org.iatoki.judgels.uriel.controllers.ContestTeamController.removeTeamMember(contestId: Long, teamId: Long, memberId: Long)

GET         /contests/:contestId/files                                                              @org.iatoki.judgels.uriel.controllers.ContestFileController.viewFiles(contestId: Long)
GET         /contests/:contestId/files/                                                             @org.iatoki.judgels.uriel.controllers.ContestFileController.listFiles(contestId: Long)
POST        /contests/:contestId/files                                                              @org.iatoki.judgels.uriel.controllers.ContestFileController.postUploadFile(contestId: Long)

GET         /contests/:contestId/scoreboards                                                        @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.viewScoreboard(contestId: Long)
GET         /contests/:contestId/scoreboards/official                                               @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.viewOfficialScoreboard(contestId: Long)
GET         /contests/:contestId/scoreboards/refresh                                                @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.refreshAllScoreboard(contestId: Long)
GET         /contests/:contestId/scoreboards/data                                                   @org.iatoki.judgels.uriel.controllers.ContestScoreboardController.downloadContestDataAsXLS(contestId: Long)

GET         /users                                                                                  @org.iatoki.judgels.uriel.controllers.UserController.index()
GET         /users/                                                                                 @org.iatoki.judgels.uriel.controllers.UserController.listUsers(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /users/new                                                                              @org.iatoki.judgels.uriel.controllers.UserController.addUser()
POST        /users                                                                                  @org.iatoki.judgels.uriel.controllers.UserController.postAddUser()
GET         /users/:userId                                                                          @org.iatoki.judgels.uriel.controllers.UserController.viewUser(userId: Long)
GET         /users/:userId/edit                                                                     @org.iatoki.judgels.uriel.controllers.UserController.editUser(userId: Long)
POST        /users/:userId                                                                          @org.iatoki.judgels.uriel.controllers.UserController.postEditUser(userId: Long)
GET         /users/:userId/remove                                                                   @org.iatoki.judgels.uriel.controllers.UserController.removeUser(userId: Long)


# Internal API

# This one cannot use /api prefix
GET         /contests/:contestId/:any/download/:filename                                            @org.iatoki.judgels.uriel.controllers.api.internal.InternalContestFileAPIController.downloadFile(contestId: Long, filename, any)

POST        /api/contests/:contestId/clarifications/unread                                          @org.iatoki.judgels.uriel.controllers.api.internal.InternalContestClarificationAPIController.getUnreadClarificationsCount(contestId: Long)
POST        /api/contests/:contestId/clarifications/unanswered                                      @org.iatoki.judgels.uriel.controllers.api.internal.InternalContestClarificationAPIController.getUnansweredClarificationsCount(contestId: Long)

POST        /api/contests/:contestId/announcements/unread                                           @org.iatoki.judgels.uriel.controllers.api.internal.InternalContestAnnouncementAPIController.getUnreadAnnouncementsCount(contestId: Long)

GET         /api/contests/teams/avatar/:imageName                                                   @org.iatoki.judgels.uriel.controllers.api.internal.InternalContestTeamAPIController.renderTeamAvatarImage(imageName)

# Testing API

POST        /api/contests/submissions/singleFileBlackBoxSubmit                                      @org.iatoki.judgels.uriel.controllers.api.testing.TestingContestSubmissionAPIController.singleFileBlackBoxSubmit()
POST        /api/contests/scoreboards/get                                                           @org.iatoki.judgels.uriel.controllers.api.testing.TestingContestScoreboardAPIController.getScoreboard()
