# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Imports
->          /                                                             frontendcommons.Routes

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                 controllers.Assets.at(path="/public", file)
GET         /vassets/*file                                                controllers.Assets.versioned(path="/public", file: Asset)


GET         /                                                             @org.iatoki.judgels.uriel.controllers.ApplicationController.index()
GET         /auth/:returnUri                                              @org.iatoki.judgels.uriel.controllers.ApplicationController.auth(returnUri: String)
GET         /authRole/:returnUri                                          @org.iatoki.judgels.uriel.controllers.ApplicationController.authRole(returnUri: String)
GET         /afterLogin/:returnUri                                        @org.iatoki.judgels.uriel.controllers.ApplicationController.afterLogin(returnUri: String)
GET         /afterProfile/:returnUri                                      @org.iatoki.judgels.uriel.controllers.ApplicationController.afterProfile(returnUri: String)

GET         /contest                                                      @org.iatoki.judgels.uriel.controllers.ContestController.index()
GET         /contest/                                                     @org.iatoki.judgels.uriel.controllers.ContestController.list(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /contest/:cId/view                                            @org.iatoki.judgels.uriel.controllers.ContestController.view(cId: Long)
GET         /contest/:cId/view/                                           @org.iatoki.judgels.uriel.controllers.ContestController.viewAndListRegistrants(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /contest/:cId/register                                        @org.iatoki.judgels.uriel.controllers.ContestController.register(cId: Long)
GET         /contest/:cId/enter                                           @org.iatoki.judgels.uriel.controllers.ContestController.enter(cId: Long)

GET         /contest/admin/create                                         @org.iatoki.judgels.uriel.controllers.ContestController.create()
POST        /contest/admin/create                                         @org.iatoki.judgels.uriel.controllers.ContestController.postCreate()

GET         /contest/:cId/admin/manager                                   @org.iatoki.judgels.uriel.controllers.ContestController.viewAdminManagers(cId: Long)
GET         /contest/:cId/admin/manager/                                  @org.iatoki.judgels.uriel.controllers.ContestController.listAdminManagers(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/admin/manager/create                            @org.iatoki.judgels.uriel.controllers.ContestController.createAdminManager(cId: Long)
POST        /contest/:cId/admin/manager/create                            @org.iatoki.judgels.uriel.controllers.ContestController.postCreateAdminManager(cId: Long)

GET         /contest/:cId/manager/update                                  @org.iatoki.judgels.uriel.controllers.ContestController.updateManagerGeneral(cId: Long)
POST        /contest/:cId/manager/update                                  @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateManagerGeneral(cId: Long)

GET         /contest/:cId/manager/update/specific                         @org.iatoki.judgels.uriel.controllers.ContestController.updateContestSpecificConfig(cId: Long)
POST        /contest/:cId/manager/update/specific                         @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateContestSpecificConfig(cId: Long)

GET         /contest/:cId/manager/supervisor                              @org.iatoki.judgels.uriel.controllers.ContestController.viewManagerSupervisors(cId: Long)
GET         /contest/:cId/manager/supervisor/                             @org.iatoki.judgels.uriel.controllers.ContestController.listManagerSupervisors(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/manager/supervisor/create                       @org.iatoki.judgels.uriel.controllers.ContestController.createManagerSupervisor(cId: Long)
POST        /contest/:cId/manager/supervisor/create                       @org.iatoki.judgels.uriel.controllers.ContestController.postCreateManagerSupervisor(cId: Long)
GET         /contest/:cId/manager/supervisor/:sId/update                  @org.iatoki.judgels.uriel.controllers.ContestController.updateManagerSupervisor(cId: Long, sId: Long)
POST        /contest/:cId/manager/supervisor/:sId/update                  @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateManagerSupervisor(cId: Long, sId: Long)

GET         /contest/:cId/supervisor/announcement                         @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorAnnouncements(cId: Long)
GET         /contest/:cId/supervisor/announcement/                        @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorAnnouncements(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/supervisor/announcement/create                  @org.iatoki.judgels.uriel.controllers.ContestController.createSupervisorAnnouncement(cId: Long)
POST        /contest/:cId/supervisor/announcement/create                  @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorAnnouncement(cId: Long)
GET         /contest/:cId/supervisor/announcement/:aId/update             @org.iatoki.judgels.uriel.controllers.ContestController.updateSupervisorAnnouncement(cId: Long, aId: Long)
POST        /contest/:cId/supervisor/announcement/:aId/update             @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateSupervisorAnnouncement(cId: Long, aId: Long)

GET         /contest/:cId/supervisor/problem                              @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorProblems(cId: Long)
GET         /contest/:cId/supervisor/problem/                             @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorProblems(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/supervisor/problem/create                       @org.iatoki.judgels.uriel.controllers.ContestController.createSupervisorProblem(cId: Long)
POST        /contest/:cId/supervisor/problem/create                       @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorProblem(cId: Long)
GET         /contest/:cId/supervisor/problem/:pId/update                  @org.iatoki.judgels.uriel.controllers.ContestController.updateSupervisorProblem(cId: Long, pId: Long)
POST        /contest/:cId/supervisor/problem/:pId/update                  @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateSupervisorProblem(cId: Long, pId: Long)

GET         /contest/:cId/supervisor/clarification                        @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorClarifications(cId: Long)
GET         /contest/:cId/supervisor/clarification/                       @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorClarifications(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/supervisor/clarification/:c2Id/update           @org.iatoki.judgels.uriel.controllers.ContestController.updateSupervisorClarification(cId: Long, c2Id: Long)
POST        /contest/:cId/supervisor/clarification/:c2Id/update           @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateSupervisorClarification(cId: Long, c2Id: Long)

GET         /contest/:cId/supervisor/contestant                           @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorContestants(cId: Long)
GET         /contest/:cId/supervisor/contestant/                          @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorContestants(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/supervisor/contestant/create                    @org.iatoki.judgels.uriel.controllers.ContestController.createSupervisorContestant(cId: Long)
POST        /contest/:cId/supervisor/contestant/create                    @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorContestant(cId: Long)
POST        /contest/:cId/supervisor/contestant/upload                    @org.iatoki.judgels.uriel.controllers.ContestController.postUploadSupervisorContestant(cId: Long)
GET         /contest/:cId/supervisor/contestant/:c2Id/update              @org.iatoki.judgels.uriel.controllers.ContestController.updateSupervisorContestant(cId: Long, c2Id: Long)
POST        /contest/:cId/supervisor/contestant/:c2Id/update              @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateSupervisorContestant(cId: Long, c2Id: Long)

GET         /contest/:cId/supervisor/team                                 @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorTeams(cId: Long)
GET         /contest/:cId/supervisor/team/                                @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorTeams(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/supervisor/team/create                          @org.iatoki.judgels.uriel.controllers.ContestController.createSupervisorTeam(cId: Long)
POST        /contest/:cId/supervisor/team/create                          @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorTeam(cId: Long)
GET         /contest/:cId/supervisor/team/:tId/update                     @org.iatoki.judgels.uriel.controllers.ContestController.updateSupervisorTeam(cId: Long, tId: Long)
POST        /contest/:cId/supervisor/team/:tId/update                     @org.iatoki.judgels.uriel.controllers.ContestController.postUpdateSupervisorTeam(cId: Long, tId: Long)
GET         /contest/:cId/supervisor/team/:tId/view                       @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorTeam(cId: Long, tId: Long)
POST        /contest/:cId/supervisor/team/:tId/coach/create               @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorTeamCoach(cId: Long, tId: Long)
GET         /contest/:cId/supervisor/team/:tId/coach/:c2Id/remove         @org.iatoki.judgels.uriel.controllers.ContestController.removeSupervisorTeamCoach(cId: Long, tId: Long, c2Id: Long)
POST        /contest/:cId/supervisor/team/:tId/member/create              @org.iatoki.judgels.uriel.controllers.ContestController.postCreateSupervisorTeamMember(cId: Long, tId: Long)
GET         /contest/:cId/supervisor/team/:tId/member/:c2Id/remove        @org.iatoki.judgels.uriel.controllers.ContestController.removeSupervisorTeamMember(cId: Long, tId: Long, c2Id: Long)

GET         /contest/:cId/supervisor/submission                           @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorSubmissions(cId: Long)
GET         /contest/:cId/supervisor/submission/                          @org.iatoki.judgels.uriel.controllers.ContestController.listSupervisorSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
GET         /contest/:cId/supervisor/submission/:sId/regrade              @org.iatoki.judgels.uriel.controllers.ContestController.regradeSupervisorSubmission(cId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)
POST        /contest/:cId/supervisor/submission/regrade                   @org.iatoki.judgels.uriel.controllers.ContestController.regradeSupervisorSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", contestantJid ?= null, problemJid ?= null)

GET         /contest/:cId/supervisor/scoreboard                           @org.iatoki.judgels.uriel.controllers.ContestController.viewSupervisorScoreboard(cId: Long)
GET         /contest/:cId/supervisor/scoreboard/refresh                   @org.iatoki.judgels.uriel.controllers.ContestController.refreshAllScoreboard(cId: Long)

GET         /contest/:cId/contestant/announcement                         @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantAnnouncements(cId: Long)
GET         /contest/:cId/contestant/announcement/                        @org.iatoki.judgels.uriel.controllers.ContestController.listContestantAnnouncements(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /contest/:cId/contestant/problem                              @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantProblems(cId: Long)
GET         /contest/:cId/contestant/problem/                             @org.iatoki.judgels.uriel.controllers.ContestController.listContestantProblems(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/contestant/problem/:pId/view                    @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantProblem(cId: Long, pId: Long)
GET         /contest/:cId/contestant/problem/:pId/render/:name            @org.iatoki.judgels.uriel.controllers.ContestController.renderImage(cId: Long, pId: Long, name: String)
POST        /contest/:cId/contestant/problem/:pJid/submit                 @org.iatoki.judgels.uriel.controllers.ContestController.postSubmitContestantProblem(cId: Long, pJid: String)

GET         /contest/:cId/contestant/submission                           @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantSubmissions(cId: Long)
GET         /contest/:cId/contestant/submission/                          @org.iatoki.judgels.uriel.controllers.ContestController.listContestantSubmissions(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/contestant/submission/:sId                      @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantSubmission(cId: Long, sId: Long)

GET         /contest/:cId/contestant/clarification                        @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantClarifications(cId: Long)
GET         /contest/:cId/contestant/clarification/                       @org.iatoki.judgels.uriel.controllers.ContestController.listContestantClarifications(cId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /contest/:cId/contestant/clarification/create                 @org.iatoki.judgels.uriel.controllers.ContestController.createContestantClarification(cId: Long)
POST        /contest/:cId/contestant/clarification/create                 @org.iatoki.judgels.uriel.controllers.ContestController.postCreateContestantClarification(cId: Long)

GET         /contest/:cId/contestant/scoreboard                           @org.iatoki.judgels.uriel.controllers.ContestController.viewContestantScoreboard(cId: Long)

GET         /contest/:cId/ajax/clarification/unread                       @org.iatoki.judgels.uriel.controllers.ContestController.unreadClarification(cId: Long)
GET         /contest/:cId/ajax/clarification/unanswered                   @org.iatoki.judgels.uriel.controllers.ContestController.unansweredClarification(cId: Long)
GET         /contest/:cId/ajax/announcement/unread                        @org.iatoki.judgels.uriel.controllers.ContestController.unreadAnnouncement(cId: Long)

GET         /userRole                                                     @org.iatoki.judgels.uriel.controllers.UserRoleController.index()
GET         /userRole/                                                    @org.iatoki.judgels.uriel.controllers.UserRoleController.list(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /userRole/:uId/update                                         @org.iatoki.judgels.uriel.controllers.UserRoleController.update(uId: Long)
POST        /userRole/:uId/update                                         @org.iatoki.judgels.uriel.controllers.UserRoleController.postUpdate(uId: Long)

GET         /userRole/:uId/delete                                         @org.iatoki.judgels.uriel.controllers.UserRoleController.delete(uId: Long)

GET         /team/avatar/:imageName                                       @org.iatoki.judgels.uriel.controllers.ContestController.renderTeamAvatarImage(imageName: String)